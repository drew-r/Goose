//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Goose.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Goose.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ---
        ///--- This lua module provides auto importing of .net classes into a named package.
        ///--- Makes for super easy use of LuaInterface glue
        ///---
        ///--- example:
        ///---   Threading = CLRPackage(&quot;System&quot;, &quot;System.Threading&quot;)
        ///---   Threading.Thread.Sleep(100)
        ///---
        ///--- Extensions:
        ///--- import() is a version of CLRPackage() which puts the package into a list which is used by a global __index lookup,
        ///--- and thus works rather like C#&apos;s using statement. It also recognizes the case where one is importing a local
        ///---  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CLRPackage {
            get {
                return ResourceManager.GetString("CLRPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function arr(t,...)
        ///arg = table.pack(...)
        ///if arg.n&gt;0 then arg.n = nil table.insert(arg,1,t) t = arg 
        ///elseif type(t) ~= &quot;table&quot; and type(t) ~= &quot;userdata&quot; then t = {t}
        ///end
        ///return Utility.ObjArrayFromTable(t)
        ///end
        ///
        ///function obj(t)
        ///return Utility.ObjFromTable(t)
        ///end
        ///
        ///function str_arr(t,...)
        ///arg = table.pack(...)
        ///if arg.n&gt;0 then arg.n = nil table.insert(arg,1,t) t = arg 
        ///elseif type(t) ~= &quot;table&quot; and type(t) ~= &quot;userdata&quot; then t = {t}
        ///end
        ///return Utility.StringArrayFromTable(t)
        ///end.
        /// </summary>
        internal static string Util {
            get {
                return ResourceManager.GetString("Util", resourceCulture);
            }
        }
    }
}
